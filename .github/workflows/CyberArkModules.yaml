name: Create CyberArk Safe

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  create-safe:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: sudo apt-get install -y jq curl

      - name: Authenticate to CyberArk
        id: login
        run: |
          #CYBR_URL = ""
          RESPONSE=$(curl -sk -X POST "https://aay4294.id.cyberark.cloud/oauth2/platformtoken" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "grant_type=client_credentials&client_id=${{ secrets.CYBR_USERNAME }}&client_secret=${{ secrets.CYBR_PASSWORD }}&scope=all")
          
          AUTH_TOKEN=$(echo "$RESPONSE" | jq -r '.token')
          echo "::add-mask::$AUTH_TOKEN"
          echo "auth_token=$AUTH_TOKEN" >> $GITHUB_OUTPUT
          #echo "$AUTH_TOKEN" > AUTH_TOKEN.txt
          #echo "Session token file written with $(wc -c < AUTH_TOKEN.txt) bytes"

      #- name: List and verify token file before upload
      #  run: |
      #    ls -l AUTH_TOKEN.txt
      #    cat AUTH_TOKEN.txt
      
      #- name: Upload raw st as an artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: raw-st
      #    path: AUTH_TOKEN.txt

      - name: Create Safe
        run: |
          SAFE_NAME="GitHubSafe-4"

          curl -sk -X POST "https://pwclab.privilegecloud.cyberark.cloud/PasswordVault/API/Safes/" \
            -H "Authorization: ${{ steps.login.outputs.auth_token }}" \
            -H "Content-Type: application/json" \
            -d "{
                  \"safe\": {
                    \"safeName\": \"$SAFE_NAME\",
                    \"Description\": \"Created from GitHub Actions\",
                    \"ManagingCPM\": \"\",
                    \"NumberOfDaysRetention\": 7
                  }
                }"

          echo "âœ… Safe '$SAFE_NAME' created in CyberArk"
