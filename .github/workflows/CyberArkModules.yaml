name: Create CyberArk Safe

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  create-safe:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: sudo apt-get install -y jq curl

      - name: Authenticate to CyberArk
        id: login
        run: |
          #CYBR_URL = ""
          RESPONSE=$(curl -sk -X POST "https://aay4294.id.cyberark.cloud/oauth2/platformtoken" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "grant_type=client_credentials&client_id=${{ secrets.CYBR_USERNAME }}&client_secret=${{ secrets.CYBR_PASSWORD }}&scope=all")
          
          AUTH_TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')
          echo "::add-mask::$AUTH_TOKEN"
          echo "auth_token=$AUTH_TOKEN" >> $GITHUB_OUTPUT
          #echo "$AUTH_TOKEN" > AUTH_TOKEN.txt
          #echo "Session token file written with $(wc -c < AUTH_TOKEN.txt) bytes"

      #- name: List and verify token file before upload
      #  run: |
      #    ls -l AUTH_TOKEN.txt
      #    cat AUTH_TOKEN.txt
      
      #- name: Upload raw st as an artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: raw-st
      #    path: AUTH_TOKEN.txt

      - name: Create_Safe
        run: |
          SAFE_NAME="GitHubSafe-6"
          echo "${{ steps.login.outputs.auth_token }}" | sha256sum

          CREATE_PAYLOAD=$(cat <<EOF
          {
            "safeName": "$SAFE_NAME",
            "description": "Safe created via GitHub Actions using CyberArk API v2",
            "managingCPM": "",
            "numberOfVersionsRetention": 5,
            "autoPurgeEnabled": true,
            "olacEnabled": false
          }
          EOF)

          Resp=$(curl -sk -X POST "https://pwclab.privilegecloud.cyberark.cloud/PasswordVault/API/Safes/" \
            -H "Authorization: Bearer ${{ steps.login.outputs.auth_token }}" \
            -H "Content-Type: application/json" \
            -d "$CREATE_PAYLOAD")

          echo "Safe onboarding response: $Resp"
          echo "response=$Resp" >> $GITHUB_OUTPUT
          #if: contains($Resp, 'safeNumber')
          #run: echo "✅ Safe is created."
          
      #- name: Check if Safe is created
      #  if: contains(steps.Create_Safe.outputs.response, 'safeNumber')
      #  run: echo "✅ Safe is created."
          #echo "✅ Safe '$SAFE_NAME' created in CyberArk"
