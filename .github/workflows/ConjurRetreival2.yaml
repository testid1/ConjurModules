name: Conjur_Retreival

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

jobs:
  get-oidc-token:
    runs-on: ubuntu-latest
    steps:
      - name: Debug OIDC environment variables
        run: |
          echo "Token: $ACTIONS_ID_TOKEN_REQUEST_TOKEN"
          echo "URL: $ACTIONS_ID_TOKEN_REQUEST_URL"
      - name: Request JWT from GitHub
        id: jwt
        run: |
          RESPONSE=$(curl -s -X POST \
          -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          -H "Accept: application/json" \
          "$ACTIONS_ID_TOKEN_REQUEST_URL")

          echo "response=$RESPONSE" >> $GITHUB_OUTPUT

          JWT=$(echo "$RESPONSE" | jq -r .value)
          echo "jwt=$JWT" >> $GITHUB_OUTPUT
          echo "jwt token:$JWT"
          echo "JWT length: ${#JWT}"



      - name: Authenticate to Conjur
        id: conjur_auth
        run: |
          CONJUR_URL="https://pwclab.secretsmgr.cyberark.cloud/api"
          SESSION_TOKEN=$(curl -s -k --request POST \
          --data "jwt=${{ steps.jwt.outputs.jwt }}" \
          "$CONJUR_URL/authn-jwt/JWTwithGITHUB/conjur/authenticate" \
          | base64 | tr -d '\r\n')

          echo "session_token=$SESSION_TOKEN" >> $GITHUB_OUTPUT
          echo "$SESSION_TOKEN" > session_token.txt
          echo "Session token file written with $(wc -c < session_token.txt) bytes"
          echo "Session token:$SESSION_TOKEN"

      - name: List and verify token file before upload
        run: |
          ls -l session_token.txt
          cat session_token.txt
 
      - name: Upload raw st as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: raw-st
          path: session_token.txt

      
      - name: Retrieve secret from Conjur
        id: retrieve
        shell: bash
        env:
          CONJUR_URL: "https://pwclab.secretsmgr.cyberark.cloud/api"
          CONJUR_ACCOUNT: "conjur"
        run: |
          set -x
          echo "Running till here"
          SESSION_TOKEN="$(cat session_token.txt)"
          SECRET_VALUE=$(curl -s -k \
            --header "Authorization: Token token=\"$SESSION_TOKEN\"" \
            "$CONJUR_URL/secrets/conjur/variable/data%2Fvault%2Fconjurtest%2Fconjurtest%2Fpassword")

          echo "secret_value=$SECRET_VALUE" >> "$GITHUB_OUTPUT"

      
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Verify paths and contents
        run: |
          echo "Working directory: $GITHUB_WORKSPACE"
          ls -R .github/Actions || echo "Path not found"

      - name: Update secrets.json with secret value
        id: update_json
        run: |
          SECRET_VALUE="${{ steps.retrieve.outputs.secret_value }}"
          echo "::add-mask::$SECRET_VALUE"
          json_path=".github/Actions/secrets.json"
          tmp="$(mktemp)"
          jq --arg v "$SECRET_VALUE" '.mySecret = $v' "$GITHUB_WORKSPACE/$json_path" > "$tmp"
          mv "$tmp" "$GITHUB_WORKSPACE/$json_path"

      - name: Commit and push changes
        shell: bash
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add .github/Actions/secrets.json
          git commit -m "Update secrets.json (mySecret) via workflow" || echo "No changes to commit"
          git push

#      - name: Write secret into JSON file
#        shell: bash
#        run: |
#          cat <<EOF > secret.json
#          {
#            "mySecret": "${{ steps.retrieve.outputs.secret_value }}"
#          }
#          EOF

#      - name: Upload secret.json as an artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: secret-json
#          path: secret.json
#          printf '%s' "${{ steps.retrieve.outputs.secret_value }}" \
#            | jq -Rs --arg key mySecret '{($key): .}' > secret.json

#      - name: Retrieve to Conjur
#        shell: bash
#        env:
#          CONJUR_URL: "https://pwclab.secretsmgr.cyberark.cloud/api"
#          CONJUR_ACCOUNT: "conjur"
#        run: |
#          set -x
#          echo "Running till here"
#          SESSION_TOKEN=$(cat session_token.txt)
#          if [ -z "$SESSION_TOKEN" ]; then
#            echo "Error: SESSION_TOKEN is empty"
#            exit 1
#          fi
#          VAR="data/vault/conjurtest/conjurtest/address"
#          SECRET_VALUE=$(curl -s -k --header "Authorization: Token token=\"$SESSION_TOKEN\"" \
#          "$CONJUR_URL/secrets/conjur/variable/data%2Fvault%2Fconjurtest%2Fconjurtest%2Fpassword")
#          echo "Secret=$SECRET_VALUE" >> $GITHUB_OUTPUT
#          echo "$SECRET_VALUE" > secret_value.txt
#          echo "Secret:$SECRET_VALUE"

#      - name: Write secret to JSON file
#        shell: bash
#        run: |
#          cat <<EOF > secret.json
#          {
#              "mySecret": "${{ steps.retrieve-secret.outputs.secret_value }}"
#          }
#          EOF
 #     - name: Retreive Secret
 #       run:  |
 #         CONJUR_URL="https://pwclab.secretsmgr.cyberark.cloud/api"
 #         SESSION_TOKEN = "${{ steps.get_token.outputs.token }}"
 #         SECRET=$(curl -s -k --header "Authorization: Token token=\"${{ steps.conjur_auth.outputs.session_token }}\"" \
 #         "$CONJUR_URL/secrets/conjur/variable/data%2Fvault%2Fconjurtest%2Fconjurtest%2Faddress")
 #         echo "DB Password: $SECRET"
 #         #SECRET=$(curl -s -H "Authorization: Token token=\"${{ steps.conjur_auth.outputs.session_token }}\"" \
 #         #"$CONJUR_URL/secrets/conjur/variable/data/vault/conjurtest/conjurtest/password")
 #           #"$CONJUR_URL/secrets/conjur/variable/data%2Fvault%2Fconjurtest%2Fconjurtest%2Faddress")
 #         #SECRET_VALUE=$(echo "$SECRET" | head -n1)
 #         #echo "DB Password: $SECRET_VALUE"
          
#  authenticate:
#    runs-on: ubuntu-latest
#    steps:
#      ...
