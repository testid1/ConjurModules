
name: Conjur OIDC Auth

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  get-oidc-token:
    runs-on:  ubuntu-latest
    steps:
      - name: Request JWT from GitHub
        id: jwt
        run:  |
          echo "Requesting OIDC token......"
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            -H "Accept: application/json" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL")
          echo $RESPONSE | jq .
          echo "::set-output name=jwt::$(echo $RESPONSE | jq -r .value)"
          
      - name: Decode JWT (for debugging)
        run: |
          echo '${{ steps.jwt.outputs.jwt }}' | cut -d '.' -f2 | base64 -d | jq
          
      - name: Authenticate to Conjur
        id:  conjur_auth
        run:  |
          CONJUR_URL="https://pwclab.secretsmgr.cyberark.cloud/api"
          #HOST_ID="repo:your-org/your-repo:environment:prod"
          RESPONSE=$(curl -s -X POST "$CONJUR_URL/authn-jwt/JWTwithGITHUB/conjur/authenticate" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "jwt=${{ steps.get_token.outputs.token }}")
          echo "session_token=$RESPONSE" >> $GITHUB_OUTPUT
          
      - name: Retreive Secret
        run:  |
          CONJUR_URL="https://pwclab.secretsmgr.cyberark.cloud/api"
          SESSION_TOKEN = ${{ steps.get_token.outputs.token }}
          SECRET=$(curl -s -H "Authorization: Token token=\"$SESSION_TOKEN\"" \
            "$CONJUR_URL/secrets/conjur/variable/data%2Fvault%2Fconjurtest%2Fconjurtest%2Faddress")
            #"$CONJUR_URL/secrets/conjur/variable/data/vault/conjurtest/conjurtest/password")
          SECRET_VALUE=$(echo "$SECRET" | head -n1)
          echo "DB Password: $SECRET_VALUE"
          
  #authenticate:
  #  runs-on: ubuntu-latest
  #  steps:
  #    ...

